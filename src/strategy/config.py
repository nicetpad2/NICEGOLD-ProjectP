"""Global configuration and default values for strategy module."""

DEFAULT_META_CLASSIFIER_PATH = "meta_classifier.pkl"
DEFAULT_SPIKE_MODEL_PATH = "meta_classifier_spike.pkl"
DEFAULT_CLUSTER_MODEL_PATH = "meta_classifier_cluster.pkl"
DEFAULT_MODEL_TO_LINK = "catboost"
DEFAULT_ENABLE_OPTUNA_TUNING = True
DEFAULT_OPTUNA_N_TRIALS = 50
DEFAULT_OPTUNA_CV_SPLITS = 5
DEFAULT_OPTUNA_METRIC = "AUC"
DEFAULT_OPTUNA_DIRECTION = "maximize"
DEFAULT_META_CLASSIFIER_FEATURES = [] # Should be loaded or defined globally
DEFAULT_SHAP_IMPORTANCE_THRESHOLD = 0.01
DEFAULT_PERMUTATION_IMPORTANCE_THRESHOLD = 0.001
DEFAULT_CATBOOST_GPU_RAM_PART = 0.95 # Default from prompt
DEFAULT_SAMPLE_SIZE = None
DEFAULT_FEATURES_TO_DROP = None
DEFAULT_EARLY_STOPPING_ROUNDS = 200 # Default early stopping

# Dynamic config (to be set at runtime or imported)
META_CLASSIFIER_PATH = DEFAULT_META_CLASSIFIER_PATH
SPIKE_MODEL_PATH = DEFAULT_SPIKE_MODEL_PATH
CLUSTER_MODEL_PATH = DEFAULT_CLUSTER_MODEL_PATH
MODEL_TO_LINK = DEFAULT_MODEL_TO_LINK
ENABLE_OPTUNA_TUNING = DEFAULT_ENABLE_OPTUNA_TUNING
OPTUNA_N_TRIALS = DEFAULT_OPTUNA_N_TRIALS
OPTUNA_CV_SPLITS = DEFAULT_OPTUNA_CV_SPLITS
OPTUNA_METRIC = DEFAULT_OPTUNA_METRIC
OPTUNA_DIRECTION = DEFAULT_OPTUNA_DIRECTION
META_CLASSIFIER_FEATURES = DEFAULT_META_CLASSIFIER_FEATURES
shap_importance_threshold = DEFAULT_SHAP_IMPORTANCE_THRESHOLD
permutation_importance_threshold = DEFAULT_PERMUTATION_IMPORTANCE_THRESHOLD
catboost_gpu_ram_part = DEFAULT_CATBOOST_GPU_RAM_PART
sample_size = DEFAULT_SAMPLE_SIZE
features_to_drop = DEFAULT_FEATURES_TO_DROP
early_stopping_rounds_config = DEFAULT_EARLY_STOPPING_ROUNDS

# OMS_INITIAL_EQUITY: Expose from config loader for public API
try:
    from src.cost import load_trading_cost_config
    trading_cost_cfg = load_trading_cost_config("config.yaml")
    OMS_INITIAL_EQUITY = trading_cost_cfg.get("initial_equity", 100)
except Exception:
    OMS_INITIAL_EQUITY = 100
